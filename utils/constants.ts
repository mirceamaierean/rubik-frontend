import { FMove } from "./commands/f";
import { RMove } from "./commands/r";
import { LMove } from "./commands/l";
import { UMove } from "./commands/u";
import { BMove } from "./commands/b";
import { RubiksCube } from "./rubiksCube";
import { Algorithm } from "./commands/algorithm";
import { YMove } from "./commands/y";

export type Edge = {
  face1: keyof RubiksCube["faces"];
  face2: keyof RubiksCube["faces"];
  iFace1: number;
  jFace1: number;
  iFace2: number;
  jFace2: number;
  algorithm?: Algorithm;
};

type Corner = {
  face1: keyof RubiksCube["faces"];
  face2: keyof RubiksCube["faces"];
  face3: keyof RubiksCube["faces"];
  iFace1: number;
  jFace1: number;
  iFace2: number;
  jFace2: number;
  iFace3: number;
  jFace3: number;
  algorithm?: Algorithm;
};

export const whiteEdges: Edge[] = [
  {
    face1: "F",
    face2: "D",
    iFace1: 2,
    jFace1: 1,
    iFace2: 0,
    jFace2: 1,
  },
  {
    face1: "F",
    face2: "R",
    iFace1: 1,
    jFace1: 2,
    iFace2: 1,
    jFace2: 0,
    algorithm: new Algorithm([new FMove()]),
  },
  {
    face1: "F",
    face2: "L",
    iFace1: 1,
    jFace1: 0,
    iFace2: 1,
    jFace2: 2,
    algorithm: new Algorithm([new FMove(true)]),
  },
  {
    face1: "F",
    face2: "U",
    iFace1: 0,
    jFace1: 1,
    iFace2: 2,
    jFace2: 1,
    algorithm: new Algorithm([new FMove(), new FMove()]),
  },
  {
    face1: "U",
    face2: "R",
    iFace1: 1,
    jFace1: 2,
    iFace2: 0,
    jFace2: 1,
    algorithm: new Algorithm([new RMove(true), new FMove(), new RMove()]),
  },
  {
    face1: "U",
    face2: "L",
    iFace1: 1,
    jFace1: 0,
    iFace2: 0,
    jFace2: 1,
    algorithm: new Algorithm([new LMove(), new FMove(true), new LMove(true)]),
  },
  {
    face1: "U",
    face2: "F",
    iFace1: 2,
    jFace1: 1,
    iFace2: 0,
    jFace2: 1,
    algorithm: new Algorithm([
      new UMove(),
      new LMove(),
      new FMove(true),
      new LMove(true),
    ]),
  },
  {
    face1: "U",
    face2: "B",
    iFace1: 0,
    jFace1: 1,
    iFace2: 0,
    jFace2: 1,
    algorithm: new Algorithm([
      new UMove(true),
      new LMove(),
      new FMove(true),
      new LMove(true),
    ]),
  },
  {
    face1: "R",
    face2: "D",
    iFace1: 2,
    jFace1: 1,
    iFace2: 1,
    jFace2: 2,
    algorithm: new Algorithm([
      new RMove(),
      new RMove(),
      new UMove(),
      new FMove(),
      new FMove(),
    ]),
  },
  {
    face1: "R",
    face2: "F",
    iFace1: 1,
    jFace1: 0,
    iFace2: 1,
    jFace2: 2,
    algorithm: new Algorithm([
      new RMove(),
      new UMove(),
      new RMove(true),
      new FMove(),
      new FMove(),
    ]),
  },
  {
    face1: "R",
    face2: "B",
    iFace1: 1,
    jFace1: 2,
    iFace2: 1,
    jFace2: 0,
    algorithm: new Algorithm([
      new RMove(true),
      new UMove(),
      new RMove(),
      new FMove(),
      new FMove(),
    ]),
  },
  {
    face1: "R",
    face2: "U",
    iFace1: 0,
    jFace1: 1,
    iFace2: 1,
    jFace2: 2,
    algorithm: new Algorithm([new UMove(), new FMove(), new FMove()]),
  },
  {
    face1: "L",
    face2: "D",
    iFace1: 2,
    jFace1: 1,
    iFace2: 1,
    jFace2: 0,
    algorithm: new Algorithm([
      new LMove(),
      new LMove(),
      new UMove(true),
      new FMove(),
      new FMove(),
    ]),
  },
  {
    face1: "L",
    face2: "F",
    iFace1: 1,
    jFace1: 2,
    iFace2: 1,
    jFace2: 0,
    algorithm: new Algorithm([
      new LMove(true),
      new UMove(true),
      new LMove(),
      new FMove(),
      new FMove(),
    ]),
  },
  {
    face1: "L",
    face2: "B",
    iFace1: 1,
    jFace1: 0,
    iFace2: 1,
    jFace2: 2,
    algorithm: new Algorithm([
      new LMove(),
      new UMove(true),
      new LMove(true),
      new FMove(),
      new FMove(),
    ]),
  },
  {
    face1: "L",
    face2: "U",
    iFace1: 0,
    jFace1: 1,
    iFace2: 1,
    jFace2: 0,
    algorithm: new Algorithm([new UMove(true), new FMove(), new FMove()]),
  },
  {
    face1: "B",
    face2: "D",
    iFace1: 2,
    jFace1: 1,
    iFace2: 2,
    jFace2: 1,
    algorithm: new Algorithm([
      new BMove(),
      new BMove(),
      new UMove(),
      new UMove(),
      new FMove(),
      new FMove(),
    ]),
  },
  {
    face1: "B",
    face2: "L",
    iFace1: 1,
    jFace1: 2,
    iFace2: 1,
    jFace2: 0,
    algorithm: new Algorithm([
      new LMove(),
      new LMove(),
      new FMove(true),
      new LMove(),
      new LMove(),
    ]),
  },
  {
    face1: "B",
    face2: "R",
    iFace1: 1,
    jFace1: 0,
    iFace2: 1,
    jFace2: 2,
    algorithm: new Algorithm([
      new RMove(),
      new RMove(),
      new FMove(),
      new RMove(),
      new RMove(),
    ]),
  },
  {
    face1: "B",
    face2: "U",
    iFace1: 0,
    jFace1: 1,
    iFace2: 0,
    jFace2: 1,
    algorithm: new Algorithm([
      new UMove(),
      new UMove(),
      new FMove(),
      new FMove(),
    ]),
  },
  {
    face1: "D",
    face2: "F",
    iFace1: 0,
    jFace1: 1,
    iFace2: 2,
    jFace2: 1,
    algorithm: new Algorithm([
      new FMove(),
      new FMove(),
      new UMove(),
      new LMove(),
      new FMove(true),
      new LMove(true),
    ]),
  },
  {
    face1: "D",
    face2: "R",
    iFace1: 1,
    jFace1: 2,
    iFace2: 2,
    jFace2: 1,
    algorithm: new Algorithm([new RMove(), new FMove(), new RMove(true)]),
  },
  {
    face1: "D",
    face2: "L",
    iFace1: 1,
    jFace1: 0,
    iFace2: 2,
    jFace2: 1,
    algorithm: new Algorithm([new LMove(true), new FMove(true), new LMove()]),
  },
  {
    face1: "D",
    face2: "B",
    iFace1: 2,
    jFace1: 1,
    iFace2: 2,
    jFace2: 1,
    algorithm: new Algorithm([
      new BMove(),
      new BMove(),
      new UMove(true),
      new LMove(),
      new FMove(true),
      new LMove(true),
    ]),
  },
];

export const whiteCorners: Corner[] = [
  {
    face1: "F",
    face2: "R",
    face3: "U",
    iFace1: 0,
    jFace1: 2,
    iFace2: 0,
    jFace2: 0,
    iFace3: 2,
    jFace3: 2,
  },
  {
    face1: "F",
    face2: "R",
    face3: "D",
    iFace1: 2,
    jFace1: 2,
    iFace2: 2,
    jFace2: 0,
    iFace3: 0,
    jFace3: 2,
    algorithm: new Algorithm([
      new RMove(),
      new UMove(),
      new RMove(true),
      new UMove(true),
    ]),
  },
  {
    face1: "B",
    face2: "R",
    face3: "U",
    iFace1: 0,
    jFace1: 0,
    iFace2: 0,
    jFace2: 2,
    iFace3: 0,
    jFace3: 2,
    algorithm: new Algorithm([new UMove()]),
  },
  {
    face1: "B",
    face2: "L",
    face3: "U",
    iFace1: 0,
    jFace1: 2,
    iFace2: 0,
    jFace2: 0,
    iFace3: 0,
    jFace3: 0,
    algorithm: new Algorithm([new UMove(), new UMove()]),
  },
  {
    face1: "F",
    face2: "L",
    face3: "U",
    iFace1: 0,
    jFace1: 0,
    iFace2: 0,
    jFace2: 2,
    iFace3: 2,
    jFace3: 0,
    algorithm: new Algorithm([new UMove(true)]),
  },
  {
    face1: "F",
    face2: "L",
    face3: "D",
    iFace1: 2,
    jFace1: 0,
    iFace2: 2,
    jFace2: 2,
    iFace3: 0,
    jFace3: 0,
    algorithm: new Algorithm([new LMove(true), new UMove(true), new LMove()]),
  },
  {
    face1: "B",
    face2: "L",
    face3: "D",
    iFace1: 2,
    jFace1: 2,
    iFace2: 2,
    jFace2: 0,
    iFace3: 2,
    jFace3: 0,
    algorithm: new Algorithm([
      new LMove(),
      new UMove(),
      new UMove(),
      new LMove(true),
    ]),
  },
  {
    face1: "B",
    face2: "R",
    face3: "D",
    iFace1: 2,
    jFace1: 0,
    iFace2: 2,
    jFace2: 2,
    iFace3: 2,
    jFace3: 2,
    algorithm: new Algorithm([
      new RMove(true),
      new UMove(),
      new RMove(),
      new UMove(),
    ]),
  },
];

export const middleEdges: Edge[] = [
  {
    face1: "F",
    face2: "U",
    iFace1: 0,
    jFace1: 1,
    iFace2: 2,
    jFace2: 1,
  },
  {
    face1: "R",
    face2: "U",
    iFace1: 0,
    jFace1: 1,
    iFace2: 1,
    jFace2: 2,
    algorithm: new Algorithm([new UMove()]),
  },
  {
    face1: "B",
    face2: "U",
    iFace1: 0,
    jFace1: 1,
    iFace2: 0,
    jFace2: 1,
    algorithm: new Algorithm([new UMove(), new UMove()]),
  },
  {
    face1: "L",
    face2: "U",
    iFace1: 0,
    jFace1: 1,
    iFace2: 1,
    jFace2: 0,
    algorithm: new Algorithm([new UMove(true)]),
  },
  {
    face1: "F",
    face2: "R",
    iFace1: 1,
    jFace1: 2,
    iFace2: 1,
    jFace2: 0,
    algorithm: new Algorithm([
      new UMove(),
      new RMove(),
      new UMove(true),
      new RMove(true),
      new UMove(true),
      new FMove(true),
      new UMove(),
      new FMove(),
      new UMove(),
      new UMove(),
    ]),
  },
  {
    face1: "F",
    face2: "L",
    iFace1: 1,
    jFace1: 0,
    iFace2: 1,
    jFace2: 2,
    algorithm: new Algorithm([
      new UMove(true),
      new LMove(true),
      new UMove(),
      new LMove(),
      new UMove(),
      new FMove(),
      new UMove(true),
      new FMove(true),
      new UMove(),
      new UMove(),
    ]),
  },
  {
    face1: "B",
    face2: "R",
    iFace1: 1,
    jFace1: 0,
    iFace2: 1,
    jFace2: 2,
    algorithm: new Algorithm([
      new YMove(),

      new UMove(),
      new RMove(),
      new UMove(true),
      new RMove(true),

      new UMove(true),
      new FMove(true),
      new UMove(),
      new FMove(),

      new UMove(true),
      new YMove(true),
    ]),
  },
  {
    face1: "B",
    face2: "L",
    iFace1: 1,
    jFace1: 2,
    iFace2: 1,
    jFace2: 0,
    algorithm: new Algorithm([
      new YMove(true),
      new UMove(true),
      new LMove(true),
      new UMove(),
      new LMove(),

      new UMove(),
      new FMove(),
      new UMove(true),
      new FMove(true),

      new UMove(),
      new YMove(),
    ]),
  },
];